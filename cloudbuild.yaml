steps:
  # Step 1: Build Docker image for math-service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/sit737-23t1-collins-ce512ad/mdb-mathservice', 'math-service']

  # Step 2: Push Docker image for math-service to container registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/sit737-23t1-collins-ce512ad/mdb-mathservice']
  
  # Step 3: Build Docker image for login-service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/sit737-23t1-collins-ce512ad/mdb-loginservice', 'login-service']

  # Step 4: Push Docker image for login-service to container registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/sit737-23t1-collins-ce512ad/mdb-loginservice']

  # Use YAML anchors to define common environment variables
  env: &env
    - 'CLOUDSDK_COMPUTE_REGION=australia-southeast2'
    - 'CLOUDSDK_COMPUTE_ZONE=australia-southeast2-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
  
  # Step 5: Apply storageClass.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/storageClass.yaml']
    env: *env

  # Step 6: Apply persistentVolume.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/persistentVolume.yaml']
    env: *env

  # Step 7: Apply persistentVolumeClaim.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/persistentVolumeClaim.yaml']
    env: *env

  # Step 8: Apply mongoService.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/mongoService.yaml']
    env: *env

  # Step 9: Apply mongoServiceDeployment.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/mongoServiceDeployment.yaml']
    env: *env
  
  # Step 10: Apply loginService.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/loginService.yaml']
    env: *env

  # Step 11: Apply loginServiceDeployment.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/loginServiceDeployment.yaml']
    env: *env
  
  # Step 12: Apply mathService.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/mathService.yaml']
    env: *env

  # Step 13: Apply mathServiceDeployment.yaml using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/mathServiceDeployment.yaml']
    env: *env
  
timeout: '1200s'
